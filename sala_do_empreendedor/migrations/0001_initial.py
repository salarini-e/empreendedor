# Generated by Django 3.2.15 on 2023-11-01 18:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atividade', models.CharField(max_length=64, verbose_name='Atividade')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da empresa')),
                ('outra_atividade', models.CharField(blank=True, max_length=64, null=True, verbose_name='Outra atividade')),
                ('outro_ramo', models.CharField(blank=True, max_length=64, null=True, verbose_name='Outro ramo')),
                ('receber_noticias', models.BooleanField(default=False, verbose_name='Deseja receber notificações sobre compras da prefeitura?')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone de contato')),
                ('whatsapp', models.CharField(blank=True, max_length=15, null=True, verbose_name='Whatsapp da empresa')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail da empresa')),
                ('site', models.URLField(blank=True, null=True, verbose_name='Site da empresa')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('validacao', models.BooleanField(default=False, verbose_name='Validação da empresa')),
                ('cadastrada_na_vitrine', models.BooleanField(default=False, verbose_name='Cadastrado na Vitrine Virtual?')),
                ('cadastrada_como_fornecedor', models.BooleanField(default=False, verbose_name='Cadastrado como fornecedor da prefeitura?')),
                ('atividade', models.ManyToManyField(to='sala_do_empreendedor.Atividade', verbose_name='Atividade')),
            ],
        ),
        migrations.CreateModel(
            name='Equipamentos_Faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do equipamento')),
            ],
        ),
        migrations.CreateModel(
            name='Escolaridade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da escolaridade')),
            ],
        ),
        migrations.CreateModel(
            name='Processo_Digital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nv', 'Novo'), ('ar', 'Aguardando reenvio de documentos'), ('aa', 'Aguardando avaliação'), ('bg', 'Boleto gerado'), ('cn', 'Concluído')], default='n', max_length=2, verbose_name='Status')),
                ('n_protocolo', models.CharField(blank=True, max_length=128, null=True, verbose_name='Número do protocolo')),
                ('rg', models.FileField(upload_to='processos/rg_cnh/', verbose_name='RG/CNH/Passaporte')),
                ('comprovante_endereco', models.FileField(upload_to='processos/comprovante_endereco/', verbose_name='Comprovante de endereço')),
                ('diploma_ou_certificado', models.FileField(blank=True, null=True, upload_to='processos/diploma_ou_certificado/', verbose_name='Diploma ou certificado')),
                ('licenca_sanitaria', models.FileField(blank=True, null=True, upload_to='processos/licenca_sanitaria/', verbose_name='Licença sanitária')),
                ('licenca_ambiental', models.FileField(blank=True, null=True, upload_to='processos/licenca_ambiental/', verbose_name='Licença ambiental')),
                ('autonomo_localizado', models.CharField(choices=[('s', 'Sim'), ('n', 'Não')], max_length=1, verbose_name='Autônomo localizado?')),
                ('espelho_iptu', models.ImageField(blank=True, null=True, upload_to='processos/espelho_iptu/', verbose_name='Espelho do IPTU')),
                ('boleto', models.FileField(blank=True, null=True, upload_to='processos/boleto/', verbose_name='Boleto')),
                ('boleto_pago', models.BooleanField(default=False, verbose_name='Boleto pago?')),
                ('n_inscricao', models.CharField(blank=True, max_length=128, null=True, verbose_name='Número de inscrição')),
                ('dt_solicitacao', models.DateField(auto_now_add=True, null=True, verbose_name='Data de solicitação')),
                ('dt_atualizacao', models.DateField(auto_now=True, null=True, verbose_name='Data de atualização')),
            ],
        ),
        migrations.CreateModel(
            name='Status_do_processo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_produto_faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do produto')),
            ],
        ),
        migrations.CreateModel(
            name='Trabalho_Faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do trabalho')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Processos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do processo')),
                ('descricao', models.TextField(verbose_name='Descrição do processo')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_no_vitrine_virtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.empresa', verbose_name='Empresa')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Ramo_de_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ramo', models.CharField(max_length=164, verbose_name='Ramo de atuação')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Profissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da profissão')),
                ('licenca_sanitaria', models.BooleanField(default=False, verbose_name='Necessita licença sanitária?')),
                ('licenca_ambiental', models.BooleanField(default=False, verbose_name='Necessita licença ambiental?')),
                ('escolaridade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.escolaridade', verbose_name='Escolaridade')),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do produto ou serviço')),
                ('descricao', models.TextField(verbose_name='Descrição do produto')),
                ('imagem', models.ImageField(upload_to='produtos/', verbose_name='Imagem do produto')),
                ('validacao_da_equipe', models.BooleanField(default=False, verbose_name='Validação da Sala do Empreendedor')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('rg_vitrine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.registro_no_vitrine_virtual', verbose_name='Registro da vitrine virtual')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Processo_Status_Documentos_Anexos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rg_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado')], default='0', max_length=1, verbose_name='Status do RG')),
                ('comprovante_endereco_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado')], default='0', max_length=1, verbose_name='Status do comprovante de endereço')),
                ('diploma_ou_certificado_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado')], default='0', max_length=1, verbose_name='Status do diploma ou certificado')),
                ('licenca_sanitaria', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado')], default='0', max_length=1, verbose_name='Status da licença sanitária')),
                ('espelho_iptu_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado')], default='0', max_length=1, verbose_name='Status do espelho do IPTU')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.processo_digital', verbose_name='Processo')),
            ],
        ),
        migrations.AddField(
            model_name='processo_digital',
            name='profissao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.profissao', verbose_name='Profissão'),
        ),
        migrations.AddField(
            model_name='processo_digital',
            name='solicitante',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário'),
        ),
        migrations.AddField(
            model_name='processo_digital',
            name='tipo_processo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.tipo_processos', verbose_name='Tipo de processo'),
        ),
        migrations.CreateModel(
            name='Porte_da_Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porte', models.CharField(max_length=32, verbose_name='Porte da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Faccao_legal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possui_mei', models.BooleanField(default=False, verbose_name='Possui MEI ou empresa de outro porte?')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('tempo_que_trabalha', models.CharField(choices=[('0', 'Menos de 1 ano'), ('1', 'De 1 a 3 anos'), ('2', 'Mais de 3 anos')], max_length=1, verbose_name='Trabalha com facção há quanto tempo')),
                ('area', models.CharField(choices=[('s', 'Sim'), ('n', 'Não')], max_length=1, verbose_name='Possui área de trabalho separada da residência?')),
                ('tamanho_area', models.CharField(choices=[('0', 'Menos de 6m²'), ('1', 'De 6 a 16m²'), ('2', 'De 16 a 50m²'), ('3', 'Mais de 50m²')], max_length=1, verbose_name='Qual o tamanho da área de trabalho?')),
                ('possui_colaboradores', models.BooleanField(default=False, verbose_name='Possui colaboradores?')),
                ('qtd_colaboradores', models.IntegerField(blank=True, null=True, verbose_name='Quantos colaboradores possui?')),
                ('outro_produto', models.CharField(blank=True, max_length=128, null=True, verbose_name='Protudz outro produto? Caso sim, descreva:')),
                ('situacao_trabalho', models.CharField(choices=[('p', 'Pouco'), ('s', 'Suficiente'), ('d', 'Em demasia')], max_length=1, verbose_name='Geralmente, como está de trabalho?')),
                ('situacao_remuneracao', models.CharField(choices=[('bx', 'Baixo'), ('rg', 'Regular'), ('bo', 'Bom'), ('ot', 'Ótimo')], max_length=2, verbose_name='Como você considera o valor que está sendo pago pela confecção de suas peças?')),
                ('qual_seu_sonho_no_setor', models.TextField(blank=True, null=True, verbose_name='Qual seu sonho no setor?')),
                ('equipamentos', models.ManyToManyField(to='sala_do_empreendedor.Equipamentos_Faccao', verbose_name='Quais equipamentos possui?')),
                ('tipo_produto', models.ManyToManyField(to='sala_do_empreendedor.Tipo_produto_faccao', verbose_name='Que tipos de produtos produz?')),
                ('trabalha_com', models.ManyToManyField(null=True, to='sala_do_empreendedor.Trabalho_Faccao', verbose_name='Trabalha com:')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.AddField(
            model_name='empresa',
            name='porte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.porte_da_empresa', verbose_name='Porte da empresa'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='ramo',
            field=models.ManyToManyField(to='sala_do_empreendedor.Ramo_de_Atuacao', verbose_name='Ramo de atuação'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='user_register',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou'),
        ),
        migrations.CreateModel(
            name='Andamento_Processo_Digital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nv', 'Novo'), ('ar', 'Aguardando reenvio de documentos'), ('aa', 'Aguardando avaliação'), ('bg', 'Boleto gerado'), ('cn', 'Concluído')], default='n', max_length=2, verbose_name='Status')),
                ('observacao', models.TextField(default='n/h', verbose_name='Mensagem')),
                ('dt_andamento', models.DateField(auto_now=True, verbose_name='Data de atualização')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.processo_digital', verbose_name='Processo')),
                ('servidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Servidor')),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('pessoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_adm', to=settings.AUTH_USER_MODEL, verbose_name='Pessoa')),
                ('processos_autorizados', models.ManyToManyField(to='sala_do_empreendedor.Tipo_Processos', verbose_name='Processos autorizados')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_register_adm', to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
    ]
